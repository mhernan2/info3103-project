#%RAML 1.0
title: Present Registry
version: v0.01
baseUri: http://info3103.cs.unb.ca:36371
types:
  uri:
    type: string
    required: true
  user:
    type: object
    properties:
      user_id:
        type: string
        required: true
      first_name:
        type: string
        required: true
      last_name:
        type: string
        required: true
      uri: uri
    example: !include examples/user_example.json
  user_response:
    type: object
    properties:
      user: user
    example: !include examples/user_response_example.json
  users:
    type: object
    properties:
      users:
        type: user[]
        required: false
    example: !include examples/user_list_example.json 
  account:
    type: object
    properties:
      username: string
      first_name: string
      last_name: string
      password: string
    example: !include examples/account_example.json
  gift:
    type: object
    properties:
      gift_id: string
      item_name: string
      price: number
      to: string
      from:
        type: string
        required: false
      uri: string
      wishlisted: 
        type: number
        required: false
      received: 
        type: number
        required: false
    example: !include examples/gift_example.json
  gift_response:
    type: object
    properties: 
      gift: gift
    example: !include examples/gift_response_example.json
  gifts:
    type: object
    properties:
      gifts: gift[]
  credentials:
    type: object
    properties: 
      username: string
      password: string
    example: |
      {
        "username": "mhernan2",
        "password": "abc123"
      }

/users:
  get:
    description: get a list of users registered in the application
    responses:
      200:
        body:
          application/json:
            type: users

  post:
    description: register a user into the system
    body:
      application/json:
        type: account
    responses:
      200:
        body:
          application/json:
            type: user_response

  /{user_id}:
    get:
      description: get a single user resource identified with `user_id`
      responses:
        200:
          body:
            application/json:
              type: user_response
        404:
    put:
      description: update a user identified by `user_id`
      body:
        application/json:
          type: user
      responses:
        200:
          body:
            application/json:
              type: user_response
        400:
        403:
        404:
    /gifts:
      get:
        description: get a list of gifts from the user identified with `user_id`
        queryParameters:
          sent:
            description: flag to retrieve sent or received gifts
            type: boolean
            required: false
            example: false
        responses:
          200:
            body:
              application/json:
                type: gifts
          404:
      post:
        description: create a new gift resource for the user identified with `user_id`
        body:
          application/json:
            type: gift
        responses:
          200:
            body:
              application/json:
                type: gift_response
      /{gift_id}:
        get:
          description: get a single gift resource identified with `gift_id` from user indentified with `user_id`
          responses: 
            200:
              body:
                application/json:
                  type: gift_response
            404:
        put: 
          description: update a gift resource identified by `gift_id`
          body:
            application/json:
              type: gift
          responses: 
            200:
              body:
                application/json:
                  type: gift_response
        
        delete:
          description: delete a gift resource identified by `gift_id`
          responses: 
            204:

/login:
  get:
    description: check if a user is logged
    responses: 
      200:
        body:
          application/json:
            type: user_response
      400:
  
  post:
    description: login a user
    body:
      application/json:
        type: credentials
    responses: 
      200:
        body:
          application/json:
            type: user_response
  
  delete:
    description: delete user session cookie / logout user
    responses: 
      200:
        body:
          application/json:
            type: object
            example: |
              {
                "status": "success"
              }

/wishlist:
  get:
    description: get a list of wishlisted items from all or a single user
    queryParameters: 
      user_id: 
        type: string
        description: identifies the user from which to get the wishlist
        example: mhernan2
        required: false
    responses: 
      200:
        body:
          application/json:
            type: gifts
  
  /actions:
    /send:
      post:
        description: record the logged in user as the sender of a wishlisted item
        body:
          application/json:
            type: object
            properties: 
              gift_id: number
            example: |
              {
                "gift_id": 8
              }
        responses: 
          200:
            body: 
              application/json:
                type: gift_response
          400:
          403:

/gifts: